// <auto-generated />
using System;
using Cursos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cursos.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cursos.Models.Entidades.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cursoId")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("numeroOrdem")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("cursoId");

                    b.ToTable("Aula");
                });

            modelBuilder.Entity("Cursos.Models.Entidades.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("publicoAlvo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("resumo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("thumbnail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("Cursos.Models.Entidades.PostagemBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("autor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("conteudo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dataPublicacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("gostei")
                        .HasColumnType("int");

                    b.Property<string>("imagemCapa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("naoGostei")
                        .HasColumnType("int");

                    b.Property<string>("tituloPost")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PostagemBlogs");
                });

            modelBuilder.Entity("Cursos.Models.Entidades.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("foto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sobre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("urlFacebook")
                        .HasColumnType("longtext");

                    b.Property<string>("urlInstagram")
                        .HasColumnType("longtext");

                    b.Property<string>("urlTwitter")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("Cursos.Models.Entidades.Aula", b =>
                {
                    b.HasOne("Cursos.Models.Entidades.Curso", "curso")
                        .WithMany()
                        .HasForeignKey("cursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("curso");
                });
#pragma warning restore 612, 618
        }
    }
}
